<!DOCTYPE html>

<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <title>Popularify</title>

    <!--<link rel='icon' href='{{ icon }}' type='image/x-icon' />
    <meta property="og:title" content='{{ previewCardTitle }}'/>
    <meta property="og:url" content='{{ previewCardUrl }}'/>
    <meta property="og:type" content='{{ previewCardWebsite }}'/>
    <meta property="og:description" content='{{ previewCardDescription }}'/> 
    <meta property="og:image" content='{{ previewCardImage }}'/>
    -->

    <!-- jquery 
    <script src="http://code.jquery.com/jquery-1.9.1.js"></script>
    <script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script> -->
    
    <!-- jQuery CDN - Slim version (=without AJAX) --> 
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
        integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
        crossorigin="anonymous"></script>

    <!-- Popper.JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"
        integrity="sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ"
        crossorigin="anonymous"></script>

    <!-- Bootstrap JS -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"
        integrity="sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm"
        crossorigin="anonymous"></script>

    <!-- bootstrap css-->

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">

    <!-- jQuery  -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>

    <!-- font-awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

</head>

<style>
    .border {
        border-style:solid;
        border-color:#000000;
    }

    .artistOption:hover{
        background:red;
        cursor: pointer;

    }

    .artistRowText{
        font-size:25px;
    }

    .artistCol{
        padding-left: 0;
    }
    
    .artistColText{
        text-align: center;
    }

    .artistCol:hover{
        background:rgb(206, 205, 205);
        cursor: pointer;
    }

    .hoverCursor{
        cursor: pointer;
    }

    .hidden{
        visibility:hidden;
        display:none;
    }

</style>

<!-- Page Content -->
<div style='text-align:center'>

    <br> <br>
    <!-- Chosen Artist Display Box (Hidden By Default) -->
    <div id='chosenArtistDisplay' class='hidden'>
        Generating Data For Artist:<br>
        <button id='cancelButton' onClick="cancel()" class='hoverCursor'>Cancel</button>
        <!-- -->
        <div id='artistDisplay' class="container" style='display:flex; width:fit-content;'>
            <div class='row border'>
                <!-- left: artist image -->
                <div class="col" style='float: left;padding: 15px;margin: 0px;margin-left: 0px;padding-left: 0px;left: 0px;'>    
                    <img style='width:100px; height:100px;' class='img-fluid' src="https://i.scdn.co/image/e69f71e2be4b67b82af90fb8e9d805715e0684fa">  
                </div>
                <!-- right: artist name (top) / popularity (bottom) -->
                <div class="col" >
                    <div class="row" style="left: 0px;margin-left: 0px;padding-left: 0px;text-align: left;">
                        <div class="col">Artist Name</div>
                        <div class="w-100"></div>
                        <div class="col">Popularity: 10x</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Artist Search Input And Button -->
    <div style='display:block;'>
        <h3>Search For An Artist:</h3>
        <br>
        <input type="text" id="artistSearch"><button id='artistSearchButton' class='hoverCursor'>Search</button>
        <br> <br>
    </div>

    <!-- Artists Search Loading/Status Display -->
    <div id='artistSearchLoading' class='hidden'>
        <div>
            <div class="spinner-border spinner-border-sm " role="status">
                <span class="sr-only">  Loading...</span>
            </div>Loading...
        </div>
    </div>

    <!-- Artist Search Results Display -->
    <div id="artistSearchResults" class="container" style='display:block;'>
        Search For A Spotify Artist
    </div>
    
    <!-- Popularify data display -->
    <div id='popularifyDisplay'>

    </div>

    <!-- footer ; legacy login & artist uri search -->
    <div id='footer' style='display:block;'>
        <br>
        <h3>Login:</h3><a href="/spotifyLogin" class="button">Login</a>

        <br>
        loggedIn={{loggedIn}}
        <br>
        access_token=<div id='access_token'>{{access_token}}</div>
        <br>

        <h3>Enter Spotify Artist URI</h3>
        <input size="22" type="text" placeholder='Spotify URI' name="url" id="uriInput">
        <button style="cursor: pointer;" name="data" type="button" onclick="submitUri(document.getElementById('uriInput').value); ">Submit</button>
    </div>

</div>

<script type="text/javascript">

    //when uri button is submitted
    async function submitUri(uri){
        uri='spotify:artist:3x3jSlhyv5CiCZDZlaTq0M'
        console.log('submitUri() uri = ', uri)
        try{
            let artistData = await getArtistData(uri)
            console.log('submitUri() artistData=',artistData)
        }catch(err){
            console.log('submitUri() err=',err)
        }
    }

    //get artist data sorted by popularitty
    async function getArtistData(uri){
        return new Promise(function (resolve, reject) {
            $.ajax({
                type: 'POST',
                url: '/spotifyApi',
                data: {
                    uri: uri,
                    access_token: document.getElementById('access_token').innerText
                },
            }).then((resp) => {
                //if (resp.status == 400) {
                //    console.log('/discogsAPI res.status=400, resp = ', resp)
                //}
                resolve(resp)
            }).catch((err) => {
                console.log('getArtistData() err = ', err)
                reject(err)
            });
        });
    }

    //search spotify for artist, and get dropdown results
    async function getArtistSearchResults(input){
        return new Promise(function (resolve, reject) {
            $.ajax({
                type: 'POST',
                url: '/spotifySearch',
                data: {
                    input: input,
                },
            }).then((resp) => {
                resolve(resp)
            }).catch((err) => {
                reject(err)
            });
        });
    }

    async function getPopularifyData(artistId){
        return new Promise(function (resolve, reject) {
            $.ajax({
                type: 'POST',
                url: '/generatePopularifyData',
                data: {
                    id: artistId,
                },
            }).then((resp) => {
                resolve(resp)
            }).catch((err) => {
                reject(err)
            });
        })
    }

    //convert data obj to html element
    async function formatArtistResultsAsHTML(artistSearchResults){
        return new Promise(function (resolve, reject) {
            //sort data via popularity
            artistSearchResults = artistSearchResults.sort((a, b) => parseFloat(b.popularity) - parseFloat(a.popularity));

            //create row div
            var rowDiv = document.createElement("div");
            rowDiv.setAttribute('class', 'row')

            //create col element for each artist search result
            for(var x = 0; x < artistSearchResults.length; x++){
                //get important data variables
                let artistName = artistSearchResults[x].name;
                let artistImg = "../../static/assets/img/spotifyArtistUnknown.jpg";
                if(artistSearchResults[x].images.length >= 1){
                    artistImg = artistSearchResults[x].images[0].url
                }
                let artistPopularity = artistSearchResults[x].popularity;
                let artistId = artistSearchResults[x].id;
                //construct html
                var colDiv = document.createElement("div");
                colDiv.setAttribute('class', 'col w-100 border artistCol')
                colDiv.setAttribute('artistid', `${artistId}`)
                colDiv.setAttribute('onClick', `selectArtist({
                    artistName:"${artistName}",
                    artistPopularity:"${artistPopularity}",
                    artistImg:"${artistImg}",
                    artistId: "${artistId}"
                })`)                

                colDiv.innerHTML=`
                <div style="float:left;" >
                    <img style='width:100px; height:100px;' class='img-fluid' src="${artistImg}">  
                </div> 
                <div class='col artistColText'>
                    <div class='row artistRowText' style="padding-left:20px; float:left" > 
                        ${artistName}
                    </div>
                    
                    <div class='row artistRowText' style='float:right'>
                        Popularity: ${artistPopularity}
                    </div>
                   
                </div> 
                `
                var dividerDiv = document.createElement('div')
                dividerDiv.setAttribute('class', 'w-100')
                
                //add col element to row element
                rowDiv.appendChild(colDiv)
                //add divider element
                rowDiv.appendChild(dividerDiv)
                
            }
            //return constructed html
            //var tempReturn = document.createElement("div");
            //tempReturn.innerText = 'temp'
            resolve(rowDiv)
        })
    }

    //when user clicks artist: begin getting Popularify data and displaying it to user
    async function selectArtist(input){
        console.log('selectArtist = ', input)

        //display loading 
        $("#artistSearchLoading").show();

        //clear artist search results
        document.getElementById('artistSearchResults').innerText = '';

        //display info about selected artist
        displaySelectedArtist(input)

        //begin generating data 
        let popularifyData = await getPopularifyData(input.artistId)

        //once artist data has been generated, display it
        displayPopularifyData(popularifyData)

        //hide loading 
        $("#artistSearchLoading").hide();

        console.log('popularifyData compelted: ', popularifyData)
    }

    //if cancel button is clicked
    function cancel(){
        //remove preexisting artist display element from page
        var artistDisplayObj = document.getElementById('artistDisplay')
        artistDisplayObj.remove();
        //clear popularifyDisplay
        document.getElementById('popularifyDisplay').innerHTML = '';
    }

    //display popularify data to the user
    async function displayPopularifyData(popularifyData){
        //clear popularify data in browser localstorage
        //store popularify data in browser localstorage
        //clear popularifyDisplay
        document.getElementById('popularifyDisplay').innerHTML = '';

        //build and display table

        document.getElementById('popularifyDisplay').innerText = `${popularifyData.toString()}`;
        
    }

    //construct html displaying the selected artist, and add it to page
    async function displaySelectedArtist(input){

            //construct html element (include x button top right)

                var artistDisplayDiv = document.createElement("div");
                artistDisplayDiv.setAttribute('id', 'artistDisplay')
                artistDisplayDiv.setAttribute('class', 'container')
                artistDisplayDiv.setAttribute('style', `display:flex; width:fit-content`)
                artistDisplayDiv.innerHTML=`
                <div class='row border'>
                    <!-- left: artist image -->
                    <div class="col" style='float: left;padding: 15px;margin: 0px;margin-left: 0px;padding-left: 0px;left: 0px;'>    
                        <img style='width:100px; height:100px;' class='img-fluid' src="${input.artistImg}">  
                    </div>
                    <!-- right: artist name (top) / popularity (bottom) -->
                    <div class="col" >
                        <div class="row" style="left: 0px;margin-left: 0px;padding-left: 0px;text-align: left;">
                            <div class="col">${input.artistName}</div>
                            <div class="w-100"></div>
                            <div class="col">Popularity: ${input.artistPopularity}</div>
                        </div>
                    </div>
                </div>
                `;

        //remove preexisting element from page
        var artistDisplayObj = document.getElementById('artistDisplay')
        artistDisplayObj.remove();
        //add new html element to page
        document.getElementById('chosenArtistDisplay').appendChild(artistDisplayDiv)
        //make visible
        var element = document.getElementById("chosenArtistDisplay");
        element.classList.remove("hidden");

        
    }

    //make a query to search for artists 
    async function searchForArtists(artistStr){
        return new Promise(async function (resolve, reject) {
            console.log(`searchForArtists(${artistStr})`)
            //make spotify api query for artists
            let artistSearchResults = await getArtistSearchResults(artistStr)
            //format artist results as html
            let artistResultsHTML = await formatArtistResultsAsHTML(artistSearchResults)
            //clear pre-existing artists search results display
            document.getElementById('artistSearchResults').innerHTML = '';
            //add to artists search results display
            document.getElementById('artistSearchResults').appendChild(artistResultsHTML)
        });

    }

    $(document).ready(function () {

        let artistSearchInProgress = false;

        //when artist search text input field changes
        $("#artistSearch").on("input", async function() {
            let searchVal = $(this).val();
            searchVal=searchVal.trim();
            //verify search value is not blank
            if(searchVal != "" && searchVal != " " && searchVal != null){
                $('#artistSearchResults').show();
                //display loading 
                $("#artistSearchLoading").show();
                //begin search for artist
                artistSearchInProgress=true;
                let result = await searchForArtists(searchVal)
                //once query is done, hide loading and set artistSearchInProgress = false
                $("artistSearchLoading").hide();
                artistSearchInProgress=false;
            }else{
                console.log('empty?')
                //search box is empty so hide search results
                $('#artistSearchResults').hide();
            }
        });

        //artist search button is clicked
        $( "#artistSearchButton" ).click(async function() {
            
            //get input text
            let textInputField = document.getElementById('artistSearch').value;
            console.log('searching for artists with name:', textInputField);

            //make spotify api query for artists
            let artistSearchResults = await getArtistSearchResults(textInputField)
            console.log('artistSearchResults = ', artistSearchResults)
            
            //format artist results as html
            let artistResultsHTML = await formatArtistResultsAsHTML(artistSearchResults)
            console.log('artistResultsHTML=',artistResultsHTML)
            //display html on page
            document.getElementById('artistSearchResults').innerHTML = '';
            document.getElementById('artistSearchResults').appendChild(artistResultsHTML)
        });
    });

</script>

</html>